OJ平台AI模块开发任务清单
1. 新增模块
1.1 AI核心模块
/OnlineJudge/ai/
├── __init__.py
├── models.py          # 数据模型
├── views.py           # API接口
├── urls.py            # 路由配置
├── serializers.py     # 序列化器
├── services.py        # 核心服务
└── utils.py           # 工具函数
2. 数据库修改
2.1 新增数据表
ai_model - AI模型配置表
ai_conversation - AI对话记录表
ai_message - AI对话消息表
ai_code_review - 代码审查记录表
ai_feedback - AI反馈评价表
2.2 数据库迁移
bash
python manage.py makemigrations ai
python manage.py migrate
3. 后端修改
3.1 主路由配置
文件：/OnlineJudge/urls.py

添加AI模块路由：url(r'^api/', include('ai.urls'))
3.2 依赖库安装
bash
pip install openai requests
4. 前端修改
4.1 新增页面组件
AI对话界面
代码解释页面
题目解题思路页面
代码审查页面
AI模型管理页面（管理员）
4.2 API调用
在/OnlineJudgeFE/src/pages/admin/api.js中添加AI相关API方法

5. 权限系统
5.1 用户角色
学生：使用AI辅助学习功能
教师：查看学生AI使用情况，管理AI模型
管理员：配置AI模型参数
6. 功能模块
6.1 核心功能
 AI智能对话
 代码解释
 解题思路生成
 代码审查
 AI反馈评价
6.2 管理功能
 AI模型管理
 对话记录查看
 使用统计分析
7. 集成要点
7.1 与现有模块交互
与题目模块集成（获取题目信息用于AI分析）
与提交模块集成（获取代码用于AI审查）
与用户模块集成（权限控制和用户数据）
7.2 API接口
/api/admin/ai_model - AI模型管理
/api/ai_chat - AI对话
/api/ai_code_explanation - 代码解释
/api/ai_problem_solution - 解题思路
/api/ai_code_review - 代码审查
/api/ai_feedback - AI反馈
8. 部署考虑
8.1 环境变量
AI服务商API密钥
AI模型配置参数
8.2 性能优化
对话历史缓存
异步任务处理（可选）


import openai
openai.api_base = "https://api.openkey.cloud/v1"
openai.api_key = "sk-L3608ysE6cylbyeeBa22438632114cBdB325359e3657267b"

response = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=[{"role": "user", "content": "Hello, world!"}]
)
print(response)